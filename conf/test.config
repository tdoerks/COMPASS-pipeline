/*
 * -------------------------------------------------
 *  Test Data Configuration Profile
 * -------------------------------------------------
 * Configuration for running COMPASS pipeline with test data.
 * Uses small resource requirements and fast execution.
 */

params {
    config_profile_name = 'Test'
    config_profile_description = 'Minimal test dataset for quick pipeline validation'

    // Maximum resources for testing
    max_cpus = 4
    max_memory = 16.GB
    max_time = 2.h

    // Test data parameters
    // These small genomes should complete in minutes
    input = "${projectDir}/test_data/samplesheet.csv"
    outdir = "test_results"

    // Database paths - use test databases or empty for auto-download
    amrfinder_db = ""
    prophage_db = ""  // Will download automatically
    checkv_db = ""    // For testing, we can skip CheckV or use small db

    // Disable NARMS filtering for test
    filter_state = null
    filter_year_start = null
    filter_year_end = null
}

process {
    // Run locally for quick testing
    executor = 'local'

    // Reduced resources for test data
    withName: 'DOWNLOAD_AMRFINDER_DB' {
        cpus = 1
        memory = 1.GB
        time = 10.m
    }

    withName: 'AMRFINDER' {
        cpus = 2
        memory = 4.GB
        time = 10.m
    }

    withName: 'VIBRANT' {
        cpus = 2
        memory = 8.GB
        time = 30.m
    }

    withName: 'DOWNLOAD_PROPHAGE_DB' {
        cpus = 2
        memory = 4.GB
        time = 15.m
    }

    withName: 'DIAMOND_PROPHAGE' {
        cpus = 2
        memory = 4.GB
        time = 10.m
    }

    withName: 'CHECKV' {
        cpus = 1
        memory = 4.GB
        time = 10.m
    }

    withName: 'PHANOTATE' {
        cpus = 1
        memory = 2.GB
        time = 10.m
    }

    withName: 'COMBINE_RESULTS' {
        cpus = 1
        memory = 2.GB
        time = 5.m
    }
}

// Enable Docker/Singularity/Apptainer
docker {
    enabled = false  // Set to true if using Docker
    runOptions = '-u $(id -u):$(id -g)'
}

apptainer {
    enabled = true
    autoMounts = true
    cacheDir = "$HOME/.apptainer/cache"
}

singularity {
    enabled = true
    autoMounts = true
    cacheDir = "$HOME/.singularity/cache"
}

// Execution reports
timeline {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_timeline_test.html"
}

report {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_report_test.html"
}

trace {
    enabled = true
    file = "${params.outdir}/pipeline_info/execution_trace_test.txt"
}

dag {
    enabled = true
    file = "${params.outdir}/pipeline_info/pipeline_dag_test.svg"
}
